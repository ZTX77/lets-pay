{"version":3,"sources":["components/RowComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["RowComponent","props","handleFocus","e","target","select","labelText","name","nameSpecial","value","onChange","onChangeSpecial","specialValue","finalAmount","react_default","a","createElement","className","id","type","min","step","pattern","onFocus","appReducer","state","action","Object","objectSpread","defineProperty","fieldName","initialState","aValue","bValue","cValue","dValue","eValue","aSpecial","bSpecial","cSpecial","dSpecial","eSpecial","App","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","_useState","useState","_useState2","aTotal","setATotal","_useState3","_useState4","bTotal","setBTotal","_useState5","_useState6","cTotal","setCTotal","_useState7","_useState8","dTotal","setDTotal","_useState9","_useState10","eTotal","setETotal","_useState11","_useState12","finalSum","setFinalSum","finalValue","toFixed","useEffect","Number","components_RowComponent","currentTarget","onClick","html2canvas","document","getElementById","then","canvas","img","toDataURL","window","open","write","setTimeout","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02b80f3b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst RowComponent = (props) => {\r\n    const handleFocus = (e) => e.target.select();\r\n    const {labelText,name, nameSpecial, value, onChange, onChangeSpecial, specialValue, finalAmount} = props;\r\n    return (\r\n      <div className='rowComponentContainer'>\r\n        <label>\r\n            {labelText}\r\n        </label>\r\n          <input id='totalValueInput' name ={name}  type='number' min='0' step='0.01' pattern=\"[0-9]\" value={value} onChange={onChange} onFocus={handleFocus}/>\r\n          <span id='divider'>/3</span>\r\n          <input id='specialValueInput' name={nameSpecial} type='number' value = {specialValue} onChange={onChangeSpecial} onFocus={handleFocus}/>\r\n          <span id='finalAmount'>{finalAmount}</span>\r\n      </div>\r\n    );\r\n};\r\nexport default RowComponent;","import React, {useState, useEffect, useReducer} from 'react';\nimport './App.css';\nimport RowComponent from './components/RowComponent';\nimport html2canvas from 'html2canvas';\n\nconst genIMG = () => {\n    // html2canvas(document.getElementById(\"root\")).then( canvas =>{\n    //     var img = canvas.toDataURL('image/png', 100);\n    //     var doc = new jsPDF();\n    //     doc.addImage(img, 'png', 20, 20);\n    //     doc.save('test.pdf')\n    // });\n    // html2canvas(document.getElementById(\"root\")).then(function (canvas) {\n    //     canvas.toBlob(function (blob) {\n    //         window.saveAs(blob, \"img.png\");\n    //     });\n    // });\n    html2canvas(document.getElementById(\"root\")).then( canvas =>{\n        var img = canvas.toDataURL('image/jpeg', 1);\n        var newTab= window.open();\n        newTab.document.write('<img src=\"' + img + '\" alt=\"img\" />');\n    });\n};\n\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'userInput': {\n        return {\n            ...state,\n            [action.fieldName]: action.value\n        };\n    }\n    default:\n      return state;\n  }\n}\n\nconst initialState = {\n  aValue:0,\n  bValue:0,\n  cValue:0,\n  dValue:0,\n  eValue:0,\n  aSpecial:0,\n  bSpecial:0,\n  cSpecial:0,\n  dSpecial:0,\n  eSpecial:0\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const {aValue, aSpecial, bValue, bSpecial, cValue, cSpecial, dValue, dSpecial, eValue, eSpecial} = state;\n  const [aTotal, setATotal] = useState(0);\n  const [bTotal, setBTotal] = useState(0);\n  const [cTotal, setCTotal] = useState(0);\n  const [dTotal, setDTotal] = useState(0);\n  const [eTotal, setETotal] = useState(0);\n  const [finalSum, setFinalSum] = useState(0);\n\n  // const [userInput, setUserInput]= useReducer((state, newState) => ({...state, ...newState}),\n\n  const finalValue = (value, specialValue) => {\n      return ((value - (specialValue * -1)) / 3).toFixed(2);\n  };\n\n  const handleClick = () => {\n      genIMG();\n      setTimeout(() => window.open(\"https://login.yahoo.com/\"), 2000);\n  };\n\n  // const handleChange = e => {\n  //   const name = e.target.name;\n  //   const newValue = e.target.value;\n  //   setUserInput({[name]: newValue});\n  // };\n\n    useEffect (() => {\n        setATotal(finalValue(aValue, aSpecial));\n        setBTotal(finalValue(bValue, bSpecial));\n        setCTotal(finalValue(cValue, cSpecial));\n        setDTotal(finalValue(dValue, dSpecial));\n        setETotal(finalValue(eValue, eSpecial));\n        setFinalSum(Number(aTotal)+ Number(bTotal)+Number(cTotal)+Number(dTotal)+Number(eTotal));\n    }, [aValue, aSpecial, bValue, bSpecial, aTotal, bTotal, cTotal, finalSum, cValue, cSpecial, dValue, dSpecial, eValue, eSpecial, dTotal, eTotal]);\n\n    return (\n    <div className='App'>\n        <div className='componentContainer'>\n            <RowComponent labelText='Net'\n                          name='aValue'\n                          nameSpecial='aSpecial'\n                          value={aValue}\n                          onChange={e => dispatch({type:'userInput', fieldName:'aValue', value: Number(e.currentTarget.value)})}\n                          specialValue={aSpecial}\n                          onChangeSpecial={e => dispatch({type:'userInput', fieldName:'aSpecial', value: e.currentTarget.value})}\n                          finalAmount = {aTotal}\n            />\n            <RowComponent labelText='Villany'\n                          name='bValue'\n                          nameSpecial='bSpecial'\n                          value={bValue}\n                          onChange={e => dispatch({type:'userInput', fieldName:'bValue', value: Number(e.currentTarget.value)})}\n                          specialValue={bSpecial}\n                          onChangeSpecial={e => dispatch({type:'userInput', fieldName:'bSpecial', value: e.currentTarget.value})}\n                          finalAmount = {bTotal}\n            />\n            <RowComponent labelText='Gáz'\n                          name='cValue'\n                          nameSpecial='cSpecial'\n                          value={cValue}\n                          onChange={e => dispatch({type:'userInput', fieldName:'cValue', value: Number(e.currentTarget.value)})}\n                          specialValue={cSpecial}\n                          onChangeSpecial={e => dispatch({type:'userInput', fieldName:'cSpecial', value: e.currentTarget.value})}\n                          finalAmount = {cTotal}\n            />\n            <RowComponent labelText='Közköltség'\n                          name='dValue'\n                          nameSpecial='dSpecial'\n                          value={dValue}\n                          onChange={e => dispatch({type:'userInput', fieldName:'dValue', value: Number(e.currentTarget.value)})}\n                          specialValue={dSpecial}\n                          onChangeSpecial={e => dispatch({type:'userInput', fieldName:'dSpecial', value: e.currentTarget.value})}\n                          finalAmount = {dTotal}\n            />\n            <RowComponent labelText='Közös'\n                          name='eValue'\n                          nameSpecial='eSpecial'\n                          value={eValue}\n                          onChange={e => dispatch({type:'userInput', fieldName:'eValue', value: Number(e.currentTarget.value)})}\n                          specialValue={eSpecial}\n                          onChangeSpecial={e => dispatch({type:'userInput', fieldName:'eSpecial', value: e.currentTarget.value})}\n                          finalAmount = {eTotal}\n            />\n        </div>\n            <div className='totalToPay'>\n                <i className=\"material-icons\" onClick={handleClick}>get_app</i>\n                <span className='totalText'>Total: {finalSum.toFixed(2)}</span>\n            </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}